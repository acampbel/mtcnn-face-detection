var sourceData4 = {"FileContents":["function [probability, correction, landmarks] = onet(x, weights)","% onet  Apply the onet network to a batch of images.","","% Copyright 2019 The MathWorks, Inc.","","    for layer = 1:4","        weightName = sprintf(\"features_conv%d_weight\", layer);","        biasName = sprintf(\"features_conv%d_bias\", layer);","        x = dlconv(x, ...","            weights.(weightName), ...","            weights.(biasName));","        ","        preluName = sprintf(\"features_prelu%d_weight\", layer);","        x = mtcnn.util.prelu(x, weights.(preluName));","        ","        if layer < 4","            if layer == 3","                kernel = 2;","            else","                kernel = 3;","            end","            if layer == 1","                % This padding is required to replicate the default padding","                % from the original Caffe implementation","                padding = [0, 0; 2, 2];","            else","                padding = 0;","            end","            x = maxpool(x, kernel, \"Stride\", 2, \"Padding\", padding);","        end","    end","    ","    x = fullyconnect(x, weights.features_conv5_weight, weights.features_conv5_bias);","    % inference only so no dropout","    x = mtcnn.util.prelu(x, weights.features_prelu5_weight);","    ","    probability = fullyconnect(x, weights.conv6_1_weight, weights.conv6_1_bias);","    correction = fullyconnect(x, weights.conv6_2_weight, weights.conv6_2_bias);","    landmarks = fullyconnect(x, weights.conv6_3_weight, weights.conv6_3_bias);","    probability = softmax(probability);","end",""],"CoverageData":{"CoveredLineNumbers":[6,7,8,9,10,11,13,14,16,17,18,19,20,22,25,26,27,29,33,35,37,38,39,40],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,25,100,100,100,100,100,0,100,100,0,100,75,25,50,50,0,75,0,0,25,50,50,0,75,0,0,0,25,0,25,0,25,25,25,25,0,0]}}